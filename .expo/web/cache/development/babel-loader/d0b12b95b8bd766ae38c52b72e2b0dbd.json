{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hayk/Desktop/MentorApp/src/components/listItems.js\";\nimport React, { useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DraggableFlatList, { RenderItemParams } from \"react-native-draggable-flatlist\";\nimport { data as employeeData } from \"../data\";\nvar NUM_ITEMS = 10;\n\nfunction getColor(i) {\n  var multiplier = 255 / (NUM_ITEMS - 1);\n  var colorVal = i * multiplier;\n  return \"rgb(\" + colorVal + \", \" + Math.abs(128 - colorVal) + \", \" + (255 - colorVal) + \")\";\n}\n\nfunction Example() {\n  var _this = this;\n\n  var _useState = useState(employeeData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(DraggableFlatList, {\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          drag = _ref.drag,\n          isActive = _ref.isActive;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          height: 100,\n          backgroundColor: 'black',\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        onPressIn: drag,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          color: \"white\",\n          fontSize: 32\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, item.first_name));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return \"draggable-item-\" + item.key;\n    },\n    onDragEnd: function onDragEnd(_ref2) {\n      var data = _ref2.data;\n      return setData(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Example;","map":{"version":3,"sources":["/home/hayk/Desktop/MentorApp/src/components/listItems.js"],"names":["React","useState","useCallback","DraggableFlatList","RenderItemParams","data","employeeData","NUM_ITEMS","getColor","i","multiplier","colorVal","Math","abs","Example","setData","flex","item","index","drag","isActive","height","backgroundColor","alignItems","justifyContent","fontWeight","color","fontSize","first_name","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;;AAEA,OAAOC,iBAAP,IACEC,gBADF,QAEO,iCAFP;AAIA,SAAQC,IAAI,IAAKC,YAAjB;AAEA,IAAMC,SAAS,GAAG,EAAlB;;AAEA,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnB,MAAMC,UAAU,GAAG,OAAOH,SAAS,GAAG,CAAnB,CAAnB;AACA,MAAMI,QAAQ,GAAGF,CAAC,GAAGC,UAArB;AACA,kBAAcC,QAAd,UAA2BC,IAAI,CAACC,GAAL,CAAS,MAAMF,QAAf,CAA3B,WAAwD,MAAMA,QAA9D;AACD;;AAGD,SAASG,OAAT,GAAmB;AAAA;;AACjB,kBAAwBb,QAAQ,CAACK,YAAD,CAAhC;AAAA;AAAA,MAAOD,IAAP;AAAA,MAAaU,OAAb;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAEX,IADR;AAEE,IAAA,UAAU,EAAE,0BAAqC;AAAA,UAAlCY,IAAkC,QAAlCA,IAAkC;AAAA,UAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,UAArBC,IAAqB,QAArBA,IAAqB;AAAA,UAAfC,QAAe,QAAfA,QAAe;AAC7C,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,GADH;AAELC,UAAAA,eAAe,EAAE,OAFZ;AAGLC,UAAAA,UAAU,EAAE,QAHP;AAILC,UAAAA,cAAc,EAAE;AAJX,SADT;AAOE,QAAA,SAAS,EAAEL,IAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLM,UAAAA,UAAU,EAAE,MADP;AAELC,UAAAA,KAAK,EAAE,OAFF;AAGLC,UAAAA,QAAQ,EAAE;AAHL,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGV,IAAI,CAACW,UAPR,CATF,CADF;AAqBD,KAxBL;AAyBE,IAAA,YAAY,EAAE,sBAACX,IAAD,EAAOC,KAAP;AAAA,iCAAmCD,IAAI,CAACY,GAAxC;AAAA,KAzBhB;AA0BE,IAAA,SAAS,EAAE;AAAA,UAAGxB,IAAH,SAAGA,IAAH;AAAA,aAAcU,OAAO,CAACV,IAAD,CAArB;AAAA,KA1Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgCD;;AAED,eAAeS,OAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\nimport DraggableFlatList, {\n  RenderItemParams,\n} from \"react-native-draggable-flatlist\";\n\nimport {data as  employeeData} from '../data'\n\nconst NUM_ITEMS = 10;\n\nfunction getColor(i) {\n  const multiplier = 255 / (NUM_ITEMS - 1);\n  const colorVal = i * multiplier;\n  return `rgb(${colorVal}, ${Math.abs(128 - colorVal)}, ${255 - colorVal})`;\n}\n\n\nfunction Example() {\n  const [data, setData] = useState(employeeData);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <DraggableFlatList\n        data={data}\n        renderItem={({ item, index, drag, isActive }) => {\n            return (\n              <TouchableOpacity\n                style={{\n                  height: 100,\n                  backgroundColor: 'black',\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                onPressIn={drag}\n              >\n                <Text\n                  style={{\n                    fontWeight: \"bold\",\n                    color: \"white\",\n                    fontSize: 32,\n                  }}\n                >\n                  {item.first_name}\n                </Text>\n              </TouchableOpacity>\n            );\n          }}\n        keyExtractor={(item, index) => `draggable-item-${item.key}`}\n        onDragEnd={({ data }) => setData(data)}\n      />\n    </View>\n  );\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}