{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hayk/Desktop/MentorApp/src/components/CurrentLocation.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\nexport default function CurrentLocation() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState('Waiting'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      renderData = _useState6[0],\n      setRender = _useState6[1];\n\n  var runFunction = function runFunction() {\n    var _await$Location$reque, status, location, place, city, response;\n\n    return _regeneratorRuntime.async(function runFunction$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n\n            if (status !== 'granted') {\n              setErrorMsg('Access to Location denied');\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 7:\n            location = _context.sent;\n            setLocation(location);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              latitude: location.coords.latitude,\n              longitude: location.coords.longitude\n            }));\n\n          case 11:\n            place = _context.sent;\n            place.find(function (p) {\n              city = p.city;\n              setCity(p.city);\n            });\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(TimeApi.get(\"/\" + city + \".json\"));\n\n          case 15:\n            response = _context.sent;\n            setTime(response.data);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    runFunction();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, renderData));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  paragraph: {\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/hayk/Desktop/MentorApp/src/components/CurrentLocation.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","Constants","Location","CurrentLocation","location","setLocation","errorMsg","setErrorMsg","renderData","setRender","runFunction","requestPermissionsAsync","status","getCurrentPositionAsync","reverseGeocodeAsync","latitude","coords","longitude","place","find","p","city","setCity","TimeApi","get","response","setTime","data","styles","container","paragraph","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,kBAAgCN,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCR,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCV,QAAQ,CAAC,SAAD,CAAxC;AAAA;AAAA,MAAOW,UAAP;AAAA,MAAmBC,SAAnB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKR,QAAQ,CAACS,uBAAT,EADL;;AAAA;AAAA;AACZC,YAAAA,MADY,yBACZA,MADY;;AAElB,gBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBL,cAAAA,WAAW,CAAC,2BAAD,CAAX;AACD;;AAJiB;AAAA,6CAMKL,QAAQ,CAACW,uBAAT,CAAiC,EAAjC,CANL;;AAAA;AAMZT,YAAAA,QANY;AAOlBC,YAAAA,WAAW,CAACD,QAAD,CAAX;AAPkB;AAAA,6CASEF,QAAQ,CAACY,mBAAT,CAA6B;AAC/CC,cAAAA,QAAQ,EAAEX,QAAQ,CAACY,MAAT,CAAgBD,QADqB;AAE/CE,cAAAA,SAAS,EAAEb,QAAQ,CAACY,MAAT,CAAgBC;AAFoB,aAA7B,CATF;;AAAA;AASZC,YAAAA,KATY;AAelBA,YAAAA,KAAK,CAACC,IAAN,CAAW,UAAAC,CAAC,EAAI;AACdC,cAAAA,IAAI,GAAGD,CAAC,CAACC,IAAT;AACAC,cAAAA,OAAO,CAACF,CAAC,CAACC,IAAH,CAAP;AACD,aAHD;AAfkB;AAAA,6CAoBKE,OAAO,CAACC,GAAR,OAAgBH,IAAhB,WApBL;;AAAA;AAoBZI,YAAAA,QApBY;AAqBlBC,YAAAA,OAAO,CAACD,QAAQ,CAACE,IAAV,CAAP;;AArBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAyBA7B,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCtB,UAAhC,CADF,CADF;AAKD;AAED,IAAMoB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,OAAO,EAAE;AAJA,GADoB;AAO/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,SAAS,EAAE;AAFF;AAPoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Platform, Text, View, StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\n\nexport default function CurrentLocation() {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [renderData, setRender] = useState('Waiting');\n\n  const runFunction = async () => {\n    let { status } = await Location.requestPermissionsAsync();\n    if (status !== 'granted') {\n      setErrorMsg('Access to Location denied');\n    }\n\n    const location = await Location.getCurrentPositionAsync({});\n    setLocation(location)\n\n    const place = await Location.reverseGeocodeAsync({\n      latitude: location.coords.latitude,\n      longitude: location.coords.longitude\n    });\n\n    let city;\n    place.find(p => {\n      city = p.city\n      setCity(p.city)\n    });\n\n    const response = await TimeApi.get(`/${city}.json`);\n    setTime(response.data);\n\n  }\n\n  useEffect(() => {\n    runFunction()\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.paragraph}>{renderData}</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  paragraph: {\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}